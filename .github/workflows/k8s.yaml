name: build and deploy app
on:
  push:
    branches:
      - k8s

jobs:
  build:
    name: Build Docker images
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Set branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | sed  -e 's#/#-#g')"
        id: set_branch

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push frontend image to Amazon ECR
        id: build-image-latest
        run: |
          docker build \
            -t ${{ steps.login-ecr.outputs.registry }}/wilco-frontend:${{ steps.set_branch.outputs.branch }}-${{ github.sha }} \
            -f frontend/Dockerfile \
            .
          docker push ${{ steps.login-ecr.outputs.registry }}/wilco-frontend:${{ steps.set_branch.outputs.branch }}-${{ github.sha }}

      - name: Build, tag, and push backend image to Amazon ECR
        id: build-image-latest
        run: |
          docker build \
            -t ${{ steps.login-ecr.outputs.registry }}/wilco-backend:${{ steps.set_branch.outputs.branch }}-${{ github.sha }} \
            -f backend/Dockerfile \
            .
          docker push ${{ steps.login-ecr.outputs.registry }}/wilco-backend:${{ steps.set_branch.outputs.branch }}-${{ github.sha }}
  deploy:
    name: Push updated tag
    runs-on: ubuntu-20.04
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | sed  -e 's#/#-#g')"
      id: set_branch

    - name: 'Deploy'
      uses: 'deliverybot/helm@v1'
      with:
        release: 'app'
        chart: 'charts/app'
        token: '${{ github.token }}'
        values: |
          backend:
            image:
              tag: ${{ steps.set_branch.outputs.branch }}-${{ github.sha }}
          frontend:
            image:
              tag: ${{ steps.set_branch.outputs.branch }}-${{ github.sha }}
      env:
        KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'


